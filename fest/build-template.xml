<?xml version="1.0"?>
<project name="fest-template" default="test-report" basedir="." xmlns:artifact="urn:maven-artifact-ant">

  <property name="src.dir" value="${basedir}/src" />
  <property name="src.main" value="${src.dir}/main" />
  <property name="src.main.java.dir" value="${src.main}/java" />
  <property name="src.main.resources.dir" value="${src.main}/resources"/>
  <property name="src.test" value="${src.dir}/test" />
  <property name="src.test.java.dir" value="${src.test}/java" />

  <property name="lib.dir" value="${basedir}/lib" />
  <property name="lib.cobertura.dir" value="../cobertura" />

  <property name="target.dir" value="${basedir}/target" />
  <property name="target.classes.dir" value="${target.dir}/classes" />
  <property name="target.instrumented.dir" value="${target.dir}/instrumented" />
  <property name="target.test.classes.dir" value="${target.dir}/test-classes" />
  <property name="target.test.results.dir" value="${target.dir}/test-reports" />
  <property name="target.coverage.report.dir" value="${target.dir}/coverage-reports" />
  <property name="target.javadocs.dir" value="${target.dir}/javadocs" />
  <property name="target.dist.dir" value="${target.dir}/dist" />

  <property name="test.includes" value="**/*Test.class" />
  <property name="test.excludes" value="**/*TestCase.class" />

  <property name="compiler" value="javac1.5" />
  <property name="compiler.optimize" value="true" />
  <property name="compiler.debug" value="true" />
  <property name="compiler.deprecation" value="true" />
  <property name="compiler.javac.source" value="1.5" />
  <property name="compiler.javac.target" value="1.5" />

  <property name="maven.repository.local" value="../m2/repository" />
  
  <target name="all" depends="compile, test, dist" />

  <target name="compile" depends="compile.main, compile.tests"/>

  <target name="compile.main" depends="init">
    <javac compiler="${compiler}"
           destdir="${target.classes.dir}"
           debug="${compiler.debug}"
           deprecation="${compiler.deprecation}"
           optimize="${compiler.optimize}"
           source="${compiler.javac.source}"
           target="${compiler.javac.target}">
      <src path="${src.main.java.dir}" />
      <classpath refid="lib.classpath" />
    </javac>
    <antcall target="after.compile.main" />
  </target>

  <target name="after.compile.main" />
    
  <target name="init-maven">
    <path id="maven.classpath">
      <pathelement location="../maven/maven-ant-tasks-2.0.6.jar" />
    </path>

    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant">
      <classpath refid="maven.classpath" />
    </typedef>

    <artifact:pom file="pom.xml" id="maven.project" />
    <echo>Building project '${maven.project.artifactId}' v. ${maven.project.version}</echo>

    <artifact:dependencies verbose="true"
                           filesetId="dependency.fileset"
                           pathId="dependency.classpath"
                           settingsFile="../settings.xml"
                           pomRefId="maven.project" />

    <artifact:dependencies verbose="true"
                           filesetId="compile.dependency.fileset"
                           settingsFile="../settings.xml"
                           pomRefId="maven.project"
                           useScope="runtime" />
    <property name="release.name" value="${maven.project.artifactId}-${maven.project.version}"/>

  </target>

  <target name="init-classpath" depends="init-maven">
    <copy todir="${lib.dir}">
      <fileset refid="dependency.fileset" />
      <mapper type="flatten" />
    </copy>
    <path id="lib.classpath">
      <fileset dir="${lib.dir}" includes="**/*.jar,**/*.zip" />
    </path>
    <path id="cobertura.classpath">
      <fileset dir="${lib.cobertura.dir}" includes="**/*.jar,**/*.zip" />
    </path>
  </target> 
  
  <target name="init" depends="init-classpath">
    <delete dir="${target.dir}" failonerror="false" />
    <mkdir dir="${target.dir}" />
    <mkdir dir="${target.classes.dir}" />
    <mkdir dir="${target.test.results.dir}" />
    <mkdir dir="${target.test.classes.dir}" />
    <mkdir dir="${target.dist.dir}" />
    <taskdef resource="testngtasks" classpathref="lib.classpath" />
  </target>

  <target name="compile.tests">
    <javac compiler="${compiler}"
           destdir="${target.test.classes.dir}"
           debug="${compiler.debug}"
           deprecation="${compiler.deprecation}"
           optimize="${compiler.optimize}"
           source="${compiler.javac.source}"
           target="${compiler.javac.target}">
      <src path="${src.test.java.dir}" />
      <classpath>
        <pathelement location="${target.classes.dir}" />
      </classpath>
      <classpath refid="lib.classpath" />       
    </javac>
  </target>

  <target name="test" depends="compile">
    <testng outputDir="${target.test.results.dir}" haltOnFailure="true" verbose="2">
      <classpath location="${target.test.classes.dir}" />
      <classpath location="${target.classes.dir}" />
      <classpath refid="lib.classpath" />
      <xmlfileset dir="." includes="testng.xml"/>
    </testng>
  </target>

  <target name="test-report" depends="compile">
    <testng outputDir="${target.test.results.dir}" haltOnFailure="true" verbose="2" 
      listeners="org.uncommons.reportng.HTMLReporter">
      <classpath location="${target.test.classes.dir}" />
      <classpath location="${target.classes.dir}" />
      <classpath refid="dependency.classpath" />
      <xmlfileset dir="." includes="testng.xml"/>
      <sysproperty key="org.uncommons.reportng.title" 
        value="${maven.project.name} v. ${maven.project.version} - Test Report"/>
    </testng>
  </target>

  <target name="dist" depends="compile, dist.init, dist.jar, dist.src">
    <copy todir="${target.zip.root.lib.dir}">
      <fileset refid="compile.dependency.fileset" />
      <mapper type="flatten" />
    </copy>
    <zip destfile="${target.dist.dir}/${release.name}.zip">
      <fileset dir="${target.zip.dir}" includes="**/*.*"  />
    </zip>
    <artifact:install file="${target.zip.root.dir}/${release.name}.jar">
      <attach file="${target.zip.root.dir}/${release.name}-sources.jar" classifier="sources" />
      <pom refid="maven.project" />
      <artifact:localRepository id="local.repository" location="${maven.repository.local}" layout="default" />
    </artifact:install>
  </target>

  <target name="dist.init">
    <property name="target.zip.dir" value="${target.dist.dir}/zip" />
    <property name="target.zip.root.dir" value="${target.zip.dir}/${release.name}" />
    <property name="target.zip.root.lib.dir" value="${target.zip.root.dir}/lib"/>
    <mkdir dir="${target.zip.dir}" />
    <mkdir dir="${target.zip.root.dir}"/>
    <mkdir dir="${target.zip.root.lib.dir}"/>  
  </target>
  
  <target name="dist.jar">
    <jar destfile="${target.zip.root.dir}/${release.name}.jar" update="true">
      <fileset dir="${target.classes.dir}" />
    </jar>
  </target>

  <target name="dist.src">
    <zip destfile="${target.zip.root.dir}/${release.name}-sources.jar">
      <fileset dir="${src.main.java.dir}" includes="**/*.java" />
    </zip>
  </target>

  <target name="javadoc" depends="init">
    <mkdir dir="${target.javadocs.dir}" />
    <property name="copyright" value="Copyright &#169; 2006-2007 the original author or authors. All Rights Reserved." />
    <javadoc destdir="${target.javadocs.dir}"
             author="true"
             version="true"
             access="public"
             overview="${src.main}/javadocs/overview.html"
             windowtitle="${maven.project.artifactId} v. ${maven.project.version} API"
             doctitle="${maven.project.artifactId} v. ${maven.project.version}"
             bottom="${copyright}">
      <classpath>
        <pathelement location="${target.classes.dir}" />
        <pathelement location="${target.test.classes.dir}" />
      </classpath>
      <classpath refid="lib.classpath" />
      <sourcepath>
        <pathelement location="${src.main.java.dir}" />
      </sourcepath>
      <packageset dir="${src.main.java.dir}">
        <include name="**/*" />
      </packageset>
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
      <link href="http://testng.org/javadocs" />
      <link href="http://www.junit.org/junit/javadoc/4.3" />
    </javadoc>
  </target>
</project>
